{"version":3,"sources":["webpack:///./node_modules/core-js/internals/delete-property-or-throw.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/to-string.js","webpack:///./node_modules/intersection-observer/intersection-observer.js"],"names":["tryToString","$TypeError","TypeError","module","exports","O","P","$","uncurryThis","aCallable","toObject","lengthOfArrayLike","deletePropertyOrThrow","toString","fails","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","test","nativeSort","sort","push","FAILS_ON_UNDEFINED","undefined","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","value","index","result","String","fromCharCode","k","v","a","b","length","charAt","target","proto","forced","comparefn","array","this","itemsLength","items","arrayLength","x","y","getSortCompare","classof","$String","argument","window","IntersectionObserverEntry","prototype","Object","defineProperty","get","intersectionRatio","document","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","_observationTargets","some","item","element","nodeType","Error","_registerInstance","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","t","i","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","bind","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","assignedSlot"],"mappings":"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","file":"16-5ac120506241ca6164c1.js","sourcesContent":["'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = lengthOfArrayLike(items);\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","require(\"core-js/modules/es.array.sort.js\");\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function () {\n  'use strict';\n\n  // Exit early if we're not running in a browser.\n  if (typeof window !== 'object') {\n    return;\n  }\n\n  // Exit early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n  if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function get() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n    return;\n  }\n\n  /**\n   * A local reference to the document.\n   */\n  var document = window.document;\n\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observing a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n  var registry = [];\n\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect;\n\n    // Calculates the intersection ratio.\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n    // Sets intersection ratio.\n    if (targetArea) {\n      // Round the intersection ratio to avoid floating point math issues:\n      // https://github.com/w3c/IntersectionObserver/issues/324\n      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    }\n\n    // Binds and throttles `this._checkForIntersections`.\n    this._checkForIntersections = throttle(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n    // Private properties.\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n    // Public properties.\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues.map(function (margin) {\n      return margin.value + margin.unit;\n    }).join(' ');\n  }\n\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n\n  /**\n   * Use a mutation observer on the root element\n   * to detect intersection changes.\n   */\n  IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.observe = function (target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {\n      return item.element == target;\n    });\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n    this._registerInstance();\n    this._observationTargets.push({\n      element: target,\n      entry: null\n    });\n    this._monitorIntersections();\n    this._checkForIntersections();\n  };\n\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.unobserve = function (target) {\n    this._observationTargets = this._observationTargets.filter(function (item) {\n      return item.element != target;\n    });\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n      this._unregisterInstance();\n    }\n  };\n\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n  IntersectionObserver.prototype.disconnect = function () {\n    this._observationTargets = [];\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  };\n\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n  IntersectionObserver.prototype.takeRecords = function () {\n    var records = this._queuedEntries.slice();\n    this._queuedEntries = [];\n    return records;\n  };\n\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n  IntersectionObserver.prototype._initThresholds = function (opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n    return threshold.sort().filter(function (t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n      return t !== a[i - 1];\n    });\n  };\n\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n  IntersectionObserver.prototype._parseRootMargin = function (opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function (margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n      return {\n        value: parseFloat(parts[1]),\n        unit: parts[2]\n      };\n    });\n\n    // Handles shorthand.\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n    return margins;\n  };\n\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibility state is visible.\n   * @private\n   */\n  IntersectionObserver.prototype._monitorIntersections = function () {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true;\n\n      // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n        if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n  IntersectionObserver.prototype._unmonitorIntersections = function () {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n        this._domObserver = null;\n      }\n    }\n  };\n\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n  IntersectionObserver.prototype._checkForIntersections = function () {\n    var rootIsInDom = this._rootIsInDom();\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n    this._observationTargets.forEach(function (item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n      var rootContainsTarget = this._rootContainsTarget(target);\n      var oldEntry = item.entry;\n      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, rootRect);\n      var newEntry = item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      });\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function (target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\n\n      // If the parent isn't displayed, an intersection can't happen.\n      if (parentComputedStyle.display == 'none') return;\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (parent != document.body && parent != document.documentElement && parentComputedStyle.overflow != 'visible') {\n          parentRect = getBoundingClientRect(parent);\n        }\n      }\n\n      // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n        if (!intersectionRect) break;\n      }\n      parent = getParentNode(parent);\n    }\n    return intersectionRect;\n  };\n\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n  IntersectionObserver.prototype._getRootRect = function () {\n    var rootRect;\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n    return this._expandRectByRootMargin(rootRect);\n  };\n\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n  IntersectionObserver.prototype._expandRectByRootMargin = function (rect) {\n    var margins = this._rootMarginValues.map(function (margin, i) {\n      return margin.unit == 'px' ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n    return newRect;\n  };\n\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n  IntersectionObserver.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\n\n    // Ignore unchanged ratios\n    if (oldRatio === newRatio) return;\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i];\n\n      // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {\n        return true;\n      }\n    }\n  };\n\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n  IntersectionObserver.prototype._rootIsInDom = function () {\n    return !this.root || containsDeep(document, this.root);\n  };\n\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n  IntersectionObserver.prototype._rootContainsTarget = function (target) {\n    return containsDeep(this.root || document, target);\n  };\n\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n  IntersectionObserver.prototype._registerInstance = function () {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n  IntersectionObserver.prototype._unregisterInstance = function () {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n\n  /**\n   * Throttles a function and delays its execution, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function () {\n      if (!timer) {\n        timer = setTimeout(function () {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n    return width >= 0 && height >= 0 && {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n  function getBoundingClientRect(el) {\n    var rect;\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {\n      // Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n    if (!rect) return getEmptyRect();\n\n    // Older IE\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n    return rect;\n  }\n\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  /**\n   * Checks to see if a parent element contains a child element (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n  function containsDeep(parent, child) {\n    var node = child;\n    while (node) {\n      if (node == parent) return true;\n      node = getParentNode(node);\n    }\n    return false;\n  }\n\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n  function getParentNode(node) {\n    var parent = node.parentNode;\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n    if (parent && parent.assignedSlot) {\n      // If the parent is distributed in a <slot>, return the parent of a slot.\n      return parent.assignedSlot.parentNode;\n    }\n    return parent;\n  }\n\n  // Exposes the constructors globally.\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})();"],"sourceRoot":""}